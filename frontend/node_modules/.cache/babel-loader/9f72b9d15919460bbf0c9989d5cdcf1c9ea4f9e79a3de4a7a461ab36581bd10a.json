{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nexport const useChangePassword = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isChanged, setIsChanged] = useState(false);\n  const changepassword = async (oldpassword, newpassword, confirmed_newpassword) => {\n    setIsLoading(true);\n    setIsChanged(false);\n    setError(null);\n    const response = await fetch(\"http://localhost:4000/signin\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: 'include',\n      body: JSON.stringify({\n        oldpassword,\n        newpassword,\n        confirmed_newpassword\n      })\n    });\n    const json = await response.json();\n    console.log(json);\n    if (!response.ok) {\n      setIsLoading(false);\n      setError(json.error);\n    }\n    if (response.ok) {\n      setIsLoading(false);\n      alert(\"Password Changed!\");\n      setIsChanged(true);\n    }\n  };\n  return {\n    changepassword,\n    isLoading,\n    error,\n    isChanged\n  };\n};\n_s(useChangePassword, \"YyOnf+oHcqRgkCgR0M6qu4VWsgo=\");","map":{"version":3,"names":["useState","useChangePassword","_s","error","setError","isLoading","setIsLoading","isChanged","setIsChanged","changepassword","oldpassword","newpassword","confirmed_newpassword","response","fetch","method","headers","credentials","body","JSON","stringify","json","console","log","ok","alert"],"sources":["/Users/samirwankhede/Coding Stuff/Brainop Technology internship interview project/frontend/src/hooks/useChangePassword.tsx"],"sourcesContent":["import {useState} from \"react\"\n\nexport const useChangePassword = () => {\n    const [error,setError] = useState<any>(null)\n    const [isLoading,setIsLoading] = useState(false)\n    const [isChanged,setIsChanged] = useState<boolean>(false)\n    const changepassword = async (oldpassword:string,newpassword:string,confirmed_newpassword:string) => {\n        setIsLoading(true)\n        setIsChanged(false)\n        setError(null)\n        const response = await fetch(\"http://localhost:4000/signin\",{\n            method: \"POST\",\n            headers: {\"Content-Type\":\"application/json\"},\n            credentials: 'include',\n            body: JSON.stringify({oldpassword,newpassword,confirmed_newpassword})\n        })\n        const json = await response.json()\n        console.log(json)\n        if (!response.ok){\n            setIsLoading(false)\n            setError(json.error)\n        }\n        if (response.ok){\n            setIsLoading(false)\n            alert(\"Password Changed!\")\n            setIsChanged(true)\n        } \n    }\n    return {changepassword,isLoading,error,isChanged}\n}"],"mappings":";AAAA,SAAQA,QAAQ,QAAO,OAAO;AAE9B,OAAO,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAGJ,QAAQ,CAAM,IAAI,CAAC;EAC5C,MAAM,CAACK,SAAS,EAACC,YAAY,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAChD,MAAM,CAACO,SAAS,EAACC,YAAY,CAAC,GAAGR,QAAQ,CAAU,KAAK,CAAC;EACzD,MAAMS,cAAc,GAAG,MAAAA,CAAOC,WAAkB,EAACC,WAAkB,EAACC,qBAA4B,KAAK;IACjGN,YAAY,CAAC,IAAI,CAAC;IAClBE,YAAY,CAAC,KAAK,CAAC;IACnBJ,QAAQ,CAAC,IAAI,CAAC;IACd,MAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAC;MACxDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAC,cAAc,EAAC;MAAkB,CAAC;MAC5CC,WAAW,EAAE,SAAS;MACtBC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACV,WAAW;QAACC,WAAW;QAACC;MAAqB,CAAC;IACxE,CAAC,CAAC;IACF,MAAMS,IAAI,GAAG,MAAMR,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClCC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjB,IAAI,CAACR,QAAQ,CAACW,EAAE,EAAC;MACblB,YAAY,CAAC,KAAK,CAAC;MACnBF,QAAQ,CAACiB,IAAI,CAAClB,KAAK,CAAC;IACxB;IACA,IAAIU,QAAQ,CAACW,EAAE,EAAC;MACZlB,YAAY,CAAC,KAAK,CAAC;MACnBmB,KAAK,CAAC,mBAAmB,CAAC;MAC1BjB,YAAY,CAAC,IAAI,CAAC;IACtB;EACJ,CAAC;EACD,OAAO;IAACC,cAAc;IAACJ,SAAS;IAACF,KAAK;IAACI;EAAS,CAAC;AACrD,CAAC;AAAAL,EAAA,CA3BYD,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}