{"ast":null,"code":"var _jsxFileName = \"/Users/samirwankhede/Coding Stuff/Brainop Technology internship interview project/frontend/src/pages/Posts.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Header from '../components/Header';\nimport PostsList from '../components/PostsList';\nimport Loader from '../common/Loader/Loader';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PAGE_NUMBER = 1;\nexport default function Posts() {\n  _s();\n  const [postData, setPostData] = useState([]);\n  const [page, setPage] = useState(PAGE_NUMBER);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setTimeout(async () => {\n      const response = await fetch(`http://localhost:4000/getposts?pageSize=12&page=${page}`, {\n        credentials: 'include'\n      });\n      const json = await response.json();\n      console.log(json);\n      setPostData(prev => {\n        return [...prev, ...json];\n      });\n      setLoading(false);\n    }, 1000);\n  }, [page]);\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n  const handleScroll = async () => {\n    if (window.innerHeight + document.documentElement.scrollTop + 1 >= document.documentElement.scrollHeight) {\n      setLoading(true);\n      setPage(prev => prev + 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(PostsList, {\n      postsData: postData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(Posts, \"+jbzRgTSIafzNwF9d5e3nUnrwPE=\");\n_c = Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useState","useEffect","Header","PostsList","Loader","jsxDEV","_jsxDEV","Fragment","_Fragment","PAGE_NUMBER","Posts","_s","postData","setPostData","page","setPage","loading","setLoading","setTimeout","response","fetch","credentials","json","console","log","prev","window","addEventListener","handleScroll","removeEventListener","innerHeight","document","documentElement","scrollTop","scrollHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","postsData","_c","$RefreshReg$"],"sources":["/Users/samirwankhede/Coding Stuff/Brainop Technology internship interview project/frontend/src/pages/Posts.tsx"],"sourcesContent":["import React,{useState, useEffect} from 'react'\nimport Header from '../components/Header'\nimport PostsList from '../components/PostsList'\nimport Loader from '../common/Loader/Loader';\n\nconst PAGE_NUMBER = 1;\n\nexport default function Posts() {\n  const [postData, setPostData] = useState<any>([]);\n    const [page, setPage] = useState(PAGE_NUMBER);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        setTimeout(async () => {\n            const response = await fetch(\n                `http://localhost:4000/getposts?pageSize=12&page=${page}`,{\n                  credentials: 'include',\n                }\n            );\n            const json = await response.json()\n            console.log(json)\n            setPostData((prev:any) => {\n                return [...prev, ...json];\n            });\n            setLoading(false);\n        }, 1000);\n    }, [page]);\n\n    useEffect(() => {\n        window.addEventListener(\"scroll\", handleScroll);\n\n        return () => window.removeEventListener(\"scroll\", handleScroll);\n    }, []);\n\n    const handleScroll = async () => {\n        if (\n            window.innerHeight + document.documentElement.scrollTop + 1 >=\n            document.documentElement.scrollHeight\n        ) {\n            setLoading(true);\n            setPage((prev) => prev + 1);\n        }\n    };\n  return (\n    <>\n    <Header/> \n    <PostsList postsData = {postData} />\n    <Loader/>\n    </>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAC/C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,MAAM,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE7C,MAAMC,WAAW,GAAG,CAAC;AAErB,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAM,EAAE,CAAC;EAC/C,MAAM,CAACc,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAACS,WAAW,CAAC;EAC7C,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACZiB,UAAU,CAAC,YAAY;MACnB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACvB,mDAAkDN,IAAK,EAAC,EAAC;QACxDO,WAAW,EAAE;MACf,CACJ,CAAC;MACD,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjBT,WAAW,CAAEY,IAAQ,IAAK;QACtB,OAAO,CAAC,GAAGA,IAAI,EAAE,GAAGH,IAAI,CAAC;MAC7B,CAAC,CAAC;MACFL,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC,EAAE,IAAI,CAAC;EACZ,CAAC,EAAE,CAACH,IAAI,CAAC,CAAC;EAEVb,SAAS,CAAC,MAAM;IACZyB,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAEC,YAAY,CAAC;IAE/C,OAAO,MAAMF,MAAM,CAACG,mBAAmB,CAAC,QAAQ,EAAED,YAAY,CAAC;EACnE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IACIF,MAAM,CAACI,WAAW,GAAGC,QAAQ,CAACC,eAAe,CAACC,SAAS,GAAG,CAAC,IAC3DF,QAAQ,CAACC,eAAe,CAACE,YAAY,EACvC;MACEjB,UAAU,CAAC,IAAI,CAAC;MAChBF,OAAO,CAAEU,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;IAC/B;EACJ,CAAC;EACH,oBACEnB,OAAA,CAAAE,SAAA;IAAA2B,QAAA,gBACA7B,OAAA,CAACJ,MAAM;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACTjC,OAAA,CAACH,SAAS;MAACqC,SAAS,EAAI5B;IAAS;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpCjC,OAAA,CAACF,MAAM;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eACP,CAAC;AAEP;AAAC5B,EAAA,CA3CuBD,KAAK;AAAA+B,EAAA,GAAL/B,KAAK;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}